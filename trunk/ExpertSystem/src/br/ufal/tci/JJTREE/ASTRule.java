/* Generated By:JJTree: Do not edit this line. ASTRule.java Version 4.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package br.ufal.tci.JJTREE;

import java.util.List;

import br.ufal.tci.InferenceEngine.InferenceEngineIF;
import br.ufal.tci.exception.SemanticException;
import br.ufal.tci.logger.LoggerGenerator;
import br.ufal.tci.parser.Rule;

public class ASTRule extends SimpleNode {
	public ASTRule(int id) {
		super(id);
	}

	public ASTRule(Parser_1 p, int id) {
		super(p, id);
	}

	/** Accept the visitor. **/
	@SuppressWarnings("unchecked")
	public Object jjtAccept(Parser_1Visitor visitor, Object data,
			InferenceEngineIF engine) throws SemanticException {
		LoggerGenerator
				.debug("Visitando " + this.getClass().getCanonicalName());
		Object result = null;
		if (data instanceof List) {
			List dataList = (List) data;
			// if (!dataList.isEmpty()) {
			List<Rule> ruleList = (List<Rule>) dataList;
			Rule rule = (Rule) visitor.visit(this, new Rule(), engine);
			ruleList.add(rule);
			result = ruleList;
			// }
		}

		return (result != null) ? result : visitor.visit(this, data, engine);
	}
}
/*
 * JavaCC - OriginalChecksum=e455b0566fc1931d3a7144681c937876 (do not edit this
 * line)
 */
