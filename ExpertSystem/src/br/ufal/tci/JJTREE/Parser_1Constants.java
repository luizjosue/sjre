/* Generated By:JJTree&JavaCC: Do not edit this line. Parser_1Constants.java */
package br.ufal.tci.JJTREE;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Parser_1Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int VARIABLE = 7;
  /** RegularExpression Id. */
  int FACT = 8;
  /** RegularExpression Id. */
  int RULE = 9;
  /** RegularExpression Id. */
  int NOT = 10;
  /** RegularExpression Id. */
  int TRUE = 11;
  /** RegularExpression Id. */
  int FALSE = 12;
  /** RegularExpression Id. */
  int STRING = 13;
  /** RegularExpression Id. */
  int REAL = 14;
  /** RegularExpression Id. */
  int INT = 15;
  /** RegularExpression Id. */
  int BOOLEAN = 16;
  /** RegularExpression Id. */
  int OBJECT = 17;
  /** RegularExpression Id. */
  int IF_TOKEN = 18;
  /** RegularExpression Id. */
  int THEN_TOKEN = 19;
  /** RegularExpression Id. */
  int OR = 20;
  /** RegularExpression Id. */
  int AND = 21;
  /** RegularExpression Id. */
  int NEW = 22;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 23;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 24;
  /** RegularExpression Id. */
  int CHARACTER_LITERAL = 25;
  /** RegularExpression Id. */
  int STRING_LITERAL = 26;
  /** RegularExpression Id. */
  int IDENTIFIER = 27;
  /** RegularExpression Id. */
  int ALPHA_NUMERIC = 28;
  /** RegularExpression Id. */
  int LETTER = 29;
  /** RegularExpression Id. */
  int DIGIT = 30;
  /** RegularExpression Id. */
  int SPECIAL_CHARACTER = 31;
  /** RegularExpression Id. */
  int ALL_CHARACTERS = 32;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"variable\"",
    "\"fact\"",
    "\"rule\"",
    "\"not\"",
    "\"true\"",
    "\"false\"",
    "\"string\"",
    "\"real\"",
    "\"int\"",
    "\"boolean\"",
    "\"object\"",
    "\"if\"",
    "\"then\"",
    "\"or\"",
    "\"and\"",
    "\"new\"",
    "<INTEGER_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "<IDENTIFIER>",
    "<ALPHA_NUMERIC>",
    "<LETTER>",
    "<DIGIT>",
    "<SPECIAL_CHARACTER>",
    "<ALL_CHARACTERS>",
    "\"=\"",
    "\".\"",
    "\"(\"",
    "\")\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"[\"",
    "\"]\"",
    "\"..\"",
    "\",\"",
    "\":\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\":=\"",
    "\"+=\"",
    "\"+=<\"",
    "\"+=!=\"",
    "\"+=<=\"",
    "\"+=>=\"",
  };

}
