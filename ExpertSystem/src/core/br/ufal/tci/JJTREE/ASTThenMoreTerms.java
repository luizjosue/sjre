/* Generated By:JJTree: Do not edit this line. ASTThenMoreTerms.java Version 4.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package br.ufal.tci.JJTREE;

import br.ufal.tci.InferenceEngine.InferenceEngine;
import br.ufal.tci.exception.SemanticException;
import br.ufal.tci.logger.LoggerGenerator;
import br.ufal.tci.term.ThenMoreTerms;
import br.ufal.tci.term.ThenTerm;

public class ASTThenMoreTerms extends SimpleNode {
	public ASTThenMoreTerms(int id) {
		super(id);
	}

	public ASTThenMoreTerms(Parser_1 p, int id) {
		super(p, id);
	}

	/** Accept the visitor. **/
	public Object jjtAccept(Parser_1Visitor visitor, Object data,
			InferenceEngine engine) throws SemanticException {
		LoggerGenerator.debug("Visitando " + this.getClass().getCanonicalName());
		if (data instanceof ThenTerm) {
			ThenTerm term = (ThenTerm) data;
			ThenMoreTerms moreTerms = new ThenMoreTerms();
			moreTerms = (ThenMoreTerms) visitor.visit(this, moreTerms, engine);
			term.setThenMoreTerms(moreTerms);
			return term;

		} else if (data instanceof ThenMoreTerms) {
			ThenMoreTerms terms = (ThenMoreTerms) data;
			ThenMoreTerms moreTerms = new ThenMoreTerms();
			moreTerms = (ThenMoreTerms) visitor.visit(this, moreTerms, engine);
			terms.setThenMoreTerms(terms);
			return terms;
		}

		return visitor.visit(this, data, engine);
	}
}
/*
 * JavaCC - OriginalChecksum=4e01d3b6706c473b2c493d47a7a7fe2d (do not edit this
 * line)
 */
