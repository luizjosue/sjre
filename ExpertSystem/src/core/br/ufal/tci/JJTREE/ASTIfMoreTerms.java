/* Generated By:JJTree: Do not edit this line. ASTIfMoreTerms.java Version 4.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package br.ufal.tci.JJTREE;

import br.ufal.tci.InferenceEngine.InferenceEngine;
import br.ufal.tci.exception.SemanticException;
import br.ufal.tci.logger.LoggerGenerator;
import br.ufal.tci.term.IfMoreTerms;
import br.ufal.tci.term.IfTerm;

public class ASTIfMoreTerms extends SimpleNode {
	public ASTIfMoreTerms(int id) {
		super(id);
	}

	public ASTIfMoreTerms(Parser_1 p, int id) {
		super(p, id);
	}

	/** Accept the visitor. **/
	public Object jjtAccept(Parser_1Visitor visitor, Object data,
			InferenceEngine engine) throws SemanticException {
		LoggerGenerator.debug("Visitando " + this.getClass().getCanonicalName());
		if (data instanceof IfTerm) {
			IfTerm term = (IfTerm) data;
			IfMoreTerms terms = new IfMoreTerms();
			terms = (IfMoreTerms) visitor.visit(this, terms, engine);

			term.setTerms(terms);

			return term;

		} else if (data instanceof IfMoreTerms) {
			IfMoreTerms terms = (IfMoreTerms) data;
			IfMoreTerms otherTerms = new IfMoreTerms();
			otherTerms = (IfMoreTerms) visitor.visit(this, otherTerms, engine);

			terms.setTerms(otherTerms);

			return terms;
		}

		return visitor.visit(this, data, engine);
	}
}
/*
 * JavaCC - OriginalChecksum=3d4b73dbbced6e11833858ead25ee1d5 (do not edit this
 * line)
 */
