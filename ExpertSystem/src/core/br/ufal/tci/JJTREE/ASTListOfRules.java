/* Generated By:JJTree: Do not edit this line. ASTListOfRules.java Version 4.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package br.ufal.tci.JJTREE;

import java.util.LinkedList;
import java.util.List;

import br.ufal.tci.InferenceEngine.InferenceEngine;
import br.ufal.tci.exception.SemanticException;
import br.ufal.tci.logger.LoggerGenerator;
import br.ufal.tci.parser.Rule;
import br.ufal.tci.parser.RuleDeclaration;

public class ASTListOfRules extends SimpleNode {
	public ASTListOfRules(int id) {
		super(id);
	}

	public ASTListOfRules(Parser_1 p, int id) {
		super(p, id);
	}

	/** Accept the visitor. **/
	@SuppressWarnings("unchecked")
	public Object jjtAccept(Parser_1Visitor visitor, Object data,
			InferenceEngine engine) throws SemanticException {
		LoggerGenerator.debug("Visitando " + this.getClass().getCanonicalName());
		if (data instanceof RuleDeclaration) {
			RuleDeclaration ruleDeclaration = (RuleDeclaration) data;
			List<Rule> ruleList = (LinkedList<Rule>) visitor.visit(this,
					new LinkedList<Rule>(), engine);
			ruleDeclaration.setListOfRules(ruleList);
			return ruleDeclaration;
		}

		return visitor.visit(this, data, engine);
	}
}
/*
 * JavaCC - OriginalChecksum=7926ce831e1d1ebc23f3599d43cd24e3 (do not edit this
 * line)
 */
